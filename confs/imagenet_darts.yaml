dataset:
  name: 'imagenet'
  dataroot: '~/data/ImageNet' #torchvision data folder
  n_classes: 1000
  ch_in: 3 # number of channels in image

darts:
  test:
    model_desc_file: 'model_desc.yaml'
    model_file: 'imagenet_model.pt'
    data_parallel: True
    max_final_edges: 2 # max edge that can be in final arch per node
    model_desc:
      init_ch_out: 36 # num of channels for stem outpt node
      n_cells: 14 # number of cells
      n_nodes: 4 # number of nodes in a cell
      n_out_nodes: 4 # last n nodes to concate output from
      stem_multiplier: 1 # output channels multiplier for the stem
      aux_weight: 0.4 # weight for loss from auxiliary towers in test time arch
      drop_path_prob: 0.0 # probability that given edge will be dropped
    test_lossfn:
      type: 'CrossEntropyLabelSmooth'
      smoothing: 0.1
    loader:
      aug: '' # additional augmentations to use
      cutout: 16 # cutout length, use cutout augmentation when > 0
      batch: 128
      epochs: 250
      val_ratio: 0.4 #split portion for test set, 0 to 1
      val_fold: 0 #Fold number to use (0 to 4)
      cv_num: 5 # total number of folds available
      n_workers: 4 # if null then gpu_count*4
    optimizer:
      type: 'sgd'
      lr: 0.1 # init learning rate
      decay: 3.0e-5
      momentum: 0.9 # pytorch default is 0
      nesterov: False
      clip: 5. # grads above this value is clipped
      warmup: null
    lr_schedule:
      type: 'step'
      decay_period: 1 # epochs between two learning rate decays
      gamma: 0.97 # learning rate decay
